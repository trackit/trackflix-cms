diff --git a/node_modules/@strapi/admin/admin/src/components/LeftMenu/index.js b/node_modules/@strapi/admin/admin/src/components/LeftMenu/index.js
index 0210176..7a6ed94 100644
--- a/node_modules/@strapi/admin/admin/src/components/LeftMenu/index.js
+++ b/node_modules/@strapi/admin/admin/src/components/LeftMenu/index.js
@@ -55,6 +55,22 @@ const LinkUser = styled(RouterNavLink)`
 `;
 
 const LeftMenu = ({ generalSectionLinks, pluginsSectionLinks }) => {
+
+  //some objects of the pluginsSectionLinks array have a "category" property
+  //we want to make a new array with the pluginsSectionLinks objects that doesnt have a "category" property
+  //and group the objects that have a "category" property in a new object with the category name as the key
+  //and the value is an array of the objects that have the same category name
+  const pluginsSectionLinksNoCategory = pluginsSectionLinks.filter((link) => !link.category);
+  const pluginsSectionLinksCategory = pluginsSectionLinks.filter((link) => link.category);
+  const pluginsSectionLinksCategoryGrouped = pluginsSectionLinksCategory.reduce((acc, link) => {
+    const { category } = link;
+    if (!acc[category]) {
+      acc[category] = [];
+    }
+    acc[category].push(link);
+    return acc;
+  }, {});
+
   const buttonRef = useRef();
   const [userLinksVisible, setUserLinksVisible] = useState(false);
   const {
@@ -96,19 +112,13 @@ const LeftMenu = ({ generalSectionLinks, pluginsSectionLinks }) => {
     trackUsage('willNavigate', { from: pathname, to: destination });
   };
 
-  const menuTitle = formatMessage({
-    id: 'app.components.LeftMenu.navbrand.title',
-    defaultMessage: 'Strapi Dashboard',
-  });
+  const menuTitle = "Trackflix"
 
   return (
     <MainNav condensed={condensed}>
       <NavBrand
         as={RouterNavLink}
-        workplace={formatMessage({
-          id: 'app.components.LeftMenu.navbrand.workplace',
-          defaultMessage: 'Workplace',
-        })}
+        workplace="Content manager"
         title={menuTitle}
         icon={
           <img
@@ -124,23 +134,48 @@ const LeftMenu = ({ generalSectionLinks, pluginsSectionLinks }) => {
       <Divider />
 
       <NavSections>
-        <NavLink
+        {/* <NavLink
           as={RouterNavLink}
           to="/content-manager"
           icon={<Write />}
           onClick={() => handleClickOnLink('/content-manager')}
         >
           {formatMessage({ id: 'global.content-manager', defaultMessage: 'Content manager' })}
-        </NavLink>
+        </NavLink> */}
+
+        {Object.keys(pluginsSectionLinksCategoryGrouped).map((category) => {
+          return (
+            <NavSection
+              key={category}
+              label={formatMessage({
+                id: `app.components.LeftMenu.${category}`,
+                defaultMessage: category,
+              })}
+            >
+              {pluginsSectionLinksCategoryGrouped[category].map((link) => {
+                const Icon = link.icon;
 
-        {pluginsSectionLinks.length > 0 ? (
+                return (
+                  <NavLink
+                    as={RouterNavLink}
+                    to={link.to}
+                    key={link.to}
+                    icon={<Icon />}
+                    onClick={() => handleClickOnLink(link.to)}
+                  >
+                    {formatMessage(link.intlLabel)}
+                  </NavLink>
+                );
+              })}
+            </NavSection>
+          );
+        })}
+
+        {pluginsSectionLinksNoCategory.length > 0 ? (
           <NavSection
-            label={formatMessage({
-              id: 'app.components.LeftMenu.plugins',
-              defaultMessage: 'Plugins',
-            })}
+            label="Plugins"
           >
-            {pluginsSectionLinks.map((link) => {
+            {pluginsSectionLinksNoCategory.map((link) => {
               const Icon = link.icon;
 
               return (
diff --git a/node_modules/@strapi/admin/admin/src/content-manager/pages/App/index.js b/node_modules/@strapi/admin/admin/src/content-manager/pages/App/index.js
index cfbc1cd..59ee539 100644
--- a/node_modules/@strapi/admin/admin/src/content-manager/pages/App/index.js
+++ b/node_modules/@strapi/admin/admin/src/content-manager/pages/App/index.js
@@ -122,7 +122,9 @@ const App = () => {
   }
 
   return (
-    <Layout sideNav={<LeftMenu />}>
+    <Layout 
+    //sideNav={<LeftMenu />}
+    >
       <DragLayer renderItem={renderDraglayerItem} />
       <ModelsContext.Provider value={{ refetchData }}>
         <Switch>
diff --git a/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Login/BaseLogin.js b/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Login/BaseLogin.js
index 66f21f3..0bf72fd 100644
--- a/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Login/BaseLogin.js
+++ b/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Login/BaseLogin.js
@@ -41,7 +41,7 @@ const Login = ({ onSubmit, schema, children }) => {
               <Column>
                 <Logo />
                 <Box paddingTop={6} paddingBottom={1}>
-                  <Typography variant="alpha" as="h1">
+                <Typography as="h1" variant="alpha" textAlign="center">
                     {formatMessage({
                       id: 'Auth.form.welcome.title',
                       defaultMessage: 'Welcome!',
@@ -52,7 +52,7 @@ const Login = ({ onSubmit, schema, children }) => {
                   <Typography variant="epsilon" textColor="neutral600">
                     {formatMessage({
                       id: 'Auth.form.welcome.subtitle',
-                      defaultMessage: 'Log in to your Strapi account',
+                      defaultMessage: 'Log in to your Trackflix account',
                     })}
                   </Typography>
                 </Box>
diff --git a/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Register/index.js b/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Register/index.js
index cec300e..1d978f2 100644
--- a/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Register/index.js
+++ b/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Register/index.js
@@ -160,7 +160,7 @@ const Register = ({ authType, fieldsToDisable, noSignin, onSubmit, schema }) =>
                     <Typography as="h1" variant="alpha" textAlign="center">
                       {formatMessage({
                         id: 'Auth.form.welcome.title',
-                        defaultMessage: 'Welcome to Strapi!',
+                        defaultMessage: 'Welcome to your Trackflix content manager!',
                       })}
                     </Typography>
 
diff --git a/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js b/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js
index a22f746..ba83dc5 100644
--- a/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js
+++ b/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js
@@ -1,107 +1,194 @@
-/*
- * HomePage
- *
- */
-
-import React, { useMemo } from 'react';
-
-import { Box, Grid, GridItem, Layout, Main } from '@strapi/design-system';
-import { LoadingIndicatorPage, useGuidedTour } from '@strapi/helper-plugin';
-import { Helmet } from 'react-helmet';
-import { FormattedMessage } from 'react-intl';
-import { useHistory } from 'react-router-dom';
-import styled from 'styled-components';
-
-import GuidedTourHomepage from '../../components/GuidedTour/Homepage';
-import isGuidedTourCompleted from '../../components/GuidedTour/utils/isGuidedTourCompleted';
-import { useContentTypes } from '../../hooks/useContentTypes';
-import { useEnterprise } from '../../hooks/useEnterprise';
-
-import cornerOrnamentPath from './assets/corner-ornament.svg';
-import ContentBlocks from './ContentBlocks';
-import HomeHeader from './HomeHeader';
-import SocialLinks from './SocialLinks';
-
-const LogoContainer = styled(Box)`
-  position: absolute;
-  top: 0;
-  right: 0;
-
-  img {
-    width: ${150 / 16}rem;
-  }
-`;
-
-export const HomePageCE = () => {
-  // Temporary until we develop the menu API
-  const { collectionTypes, singleTypes, isLoading: isLoadingForModels } = useContentTypes();
-  const { guidedTourState, isGuidedTourVisible, isSkipped } = useGuidedTour();
-  const showGuidedTour =
-    !isGuidedTourCompleted(guidedTourState) && isGuidedTourVisible && !isSkipped;
-  const { push } = useHistory();
-  const handleClick = (e) => {
-    e.preventDefault();
-
-    push('/plugins/content-type-builder/content-types/create-content-type');
-  };
-
-  const hasAlreadyCreatedContentTypes = useMemo(() => {
-    const filterContentTypes = (contentTypes) => contentTypes.filter((c) => c.isDisplayed);
-
-    return (
-      filterContentTypes(collectionTypes).length > 1 || filterContentTypes(singleTypes).length > 0
-    );
-  }, [collectionTypes, singleTypes]);
-
-  if (isLoadingForModels) {
-    return <LoadingIndicatorPage />;
-  }
+import { Box, Typography, Flex, Layout, Grid, GridItem, Button } from '@strapi/design-system'
+import { useFetchClient } from '@strapi/helper-plugin'
+import React, { useEffect, useState } from 'react';
+import { LiveChannel } from './interface';
+
+const vodThumbnailStyle = {
+  width: 300,
+  aspectRatio: '16/9'
+}
+
+const liveThumbnailStyle = {
+  width: 280,
+  height: 280,
+  overflow: 'hidden',
+  borderRadius: '100%',
+}
+
+const cardTitleStyle = {
+  textAlign: 'center',
+}
+
+const CollectionType = {
+  Vod: 'vod',
+  Live: 'live-channel',
+}
+
+const VODSortAttribute = {
+  Latest: 'createdAt',
+  MostViewed: 'views',
+}
+
+const getUrl = (type, sortAttribute) =>
+  `/content-manager/collection-types/api::${type}.${type}?sort=${sortAttribute}:desc&_limit=1`;
+
+const navigateCollectionType = (type) => {
+  window.location.href = `${window.location.origin}/admin/${getUrl(type)}`;
+}
+
+const LastLiveChanel = () => {
+  const { get }  = useFetchClient()
+  const [lastLive, setLastLive] = useState<LiveChannel | null>(null);
+  const [thumbnailUrl, setThumbnailUrl] = useState<string>('');
+
+  useEffect(() => {
+    const fetchThumbnail = async () => {
+      const endpoint = getUrl(CollectionType.Live, VODSortAttribute.Latest);
+      const lastLive = await get(endpoint);
+      if (!lastLive?.data?.results || lastLive?.data?.results?.length <= 0) return;
+      setLastLive(lastLive.data.results[0]);
+    }
+    if (lastLive === null)
+      fetchThumbnail();
+  });
+
+  useEffect(() => {
+    if (lastLive === null) return;
+    const thumbnail = lastLive?.thumbnail;
+    setThumbnailUrl(thumbnail?.url);
+  }, [lastLive]);
+
+  return (
+    <Box
+      as='aside'
+      aria-labelledby='join-the-community'
+      background='neutral0'
+      hasRadius
+      paddingRight={5}
+      paddingLeft={5}
+      paddingTop={6}
+      paddingBottom={6}
+      shadow='tableShadow'
+      height={500}
+    >
+      <Flex direction='column' gap={8}>
+        <Typography as='h2' variant='alpha'>Live channel</Typography>
+        <Box style={liveThumbnailStyle} shadow='tableShadow' background='neutral100'>
+          {thumbnailUrl &&
+            <img style={{overflow: 'hidden', width: '100%'}} src={thumbnailUrl}/>
+          }
+        </Box>
+        <Button onClick={() => { navigateCollectionType(CollectionType.Live) }} >
+          <Typography as='h4'>Schedule a session</Typography>
+        </Button>
+      </Flex>
+    </Box>
+  )
+}
+
+const Separator = () => {
+  return (
+    <Box
+      as='hr'
+      style={{
+        border: 'none',
+        height: 1,
+        backgroundColor: '#e3e9f3',
+        marginTop: 10,
+        marginBottom: 10,
+      }}
+    />
+  );
+}
+
+const VODContainer = ({ sortAttribute }) => {
+  const { get } = useFetchClient()
+  const [video, setVideo] = useState(null);
+
+  useEffect(() => {
+    const fetchVod = async () => {
+      const endpoint = getUrl(CollectionType.Vod, sortAttribute);
+      const lastVideoResponse = await get(endpoint);
+      const { results } = lastVideoResponse.data;
+      if (!results || results?.length === 0) return;
+
+      setVideo({
+        name: results[0].Name,
+        thumbnail: results[0].Thumbnails[0]?.url,
+        views: results[0].views,
+      });
+    }
+    if (video === null)
+      fetchVod();
+  });
 
+  return (
+    <Box
+      as='aside'
+      aria-labelledby='join-the-community'
+      background='neutral0'
+      hasRadius
+      paddingRight={5}
+      paddingLeft={5}
+      paddingTop={4}
+      paddingBottom={6}
+      shadow='tableShadow'
+      style={{ position: 'relative', width: 350 }}
+    >
+      <Typography style={cardTitleStyle} as='h2' variant='alpha'>
+        {sortAttribute === VODSortAttribute.Latest ? 'Latest VOD': 'Most viewed 🔥'}
+      </Typography>
+      <Separator />
+      <Flex direction='column' gap={8} style={{marginTop: 30}}>
+        <Flex direction='column' gap={1}>
+          <Typography as='h2' variant='alpha' style={{width: '100%', textAlign: 'center'}}>
+            {video ? video.name : ''}
+          </Typography>
+          <Typography>by Author</Typography>
+            {sortAttribute === VODSortAttribute.MostViewed &&
+              <Typography variant='beta'>{video ? `${video.views} view(s)` : ''}</Typography>
+            }
+        </Flex>
+        <Box style={vodThumbnailStyle} shadow='tableShadeow' background='neutral100'>
+          {video?.thumbnail != '' &&
+            <img style={{aspectRatio: '16/9', width: '100%'}} src={video?.thumbnail}/>
+          }
+        </Box>
+        <Button
+          onClick={() => { navigateCollectionType(CollectionType.Vod) }}
+        >
+          <Typography as='h4'>Manage your VOD's</Typography>
+        </Button>
+      </Flex>
+    </Box>
+  )
+}
+
+const HomePage = () => {
   return (
     <Layout>
-      <FormattedMessage id="HomePage.helmet.title" defaultMessage="Homepage">
-        {(title) => <Helmet title={title[0]} />}
-      </FormattedMessage>
-      <Main>
-        <LogoContainer>
-          <img alt="" aria-hidden src={cornerOrnamentPath} />
-        </LogoContainer>
-        <Box padding={10}>
+      <Box padding={10}>
           <Grid>
             <GridItem col={8} s={12}>
-              <HomeHeader
-                onCreateCT={handleClick}
-                hasCreatedContentType={hasAlreadyCreatedContentTypes}
-              />
-            </GridItem>
-          </Grid>
-          <Grid gap={6}>
-            <GridItem col={8} s={12}>
-              {showGuidedTour ? <GuidedTourHomepage /> : <ContentBlocks />}
-            </GridItem>
-            <GridItem col={4} s={12}>
-              <SocialLinks />
+              <Box paddingLeft={6} paddingBottom={10}>
+                <Flex direction='column' alignItems='flex-start' gap={5}>
+                  <Typography as='h1' variant='alpha'>Welcome to your Trackflix CMS 👋</Typography>
+                  <Typography as='p' variant='epsilon' width='70%'>
+                    We hope you are making progress on your project! Feel free to read the latest news about Strapi.
+                    We are giving our best to improve the product based on your feedback.
+                  </Typography>
+                </Flex>
+              </Box>
             </GridItem>
           </Grid>
-        </Box>
-      </Main>
+          <Flex direction='row' alignItems='stretch' justifyContent='center' gap={10}>
+            <VODContainer sortAttribute={VODSortAttribute.Latest} />
+            <LastLiveChanel />
+            <VODContainer sortAttribute={VODSortAttribute.MostViewed} />
+          </Flex>
+      </Box>
     </Layout>
   );
 };
 
-function HomePageSwitch() {
-  const HomePage = useEnterprise(
-    HomePageCE,
-    // eslint-disable-next-line import/no-cycle
-    async () => (await import('../../../../ee/admin/pages/HomePage')).HomePageEE
-  );
-
-  // block rendering until the EE component is fully loaded
-  if (!HomePage) {
-    return null;
-  }
-
-  return <HomePage />;
-}
-
-export default HomePageSwitch;
+export default HomePage;
\ No newline at end of file
diff --git a/node_modules/@strapi/admin/admin/src/translations/en.json b/node_modules/@strapi/admin/admin/src/translations/en.json
index f999eac..047840f 100644
--- a/node_modules/@strapi/admin/admin/src/translations/en.json
+++ b/node_modules/@strapi/admin/admin/src/translations/en.json
@@ -44,8 +44,8 @@
   "Auth.form.rememberMe.label": "Remember me",
   "Auth.form.username.label": "Username",
   "Auth.form.username.placeholder": "e.g. Kai_Doe",
-  "Auth.form.welcome.subtitle": "Log in to your Strapi account",
-  "Auth.form.welcome.title": "Welcome to Strapi!",
+  "Auth.form.welcome.subtitle": "Log in to your Trackflix account",
+  "Auth.form.welcome.title": "Welcome to your Trackflix content manager!",
   "Auth.link.forgot-password": "Forgot your password?",
   "Auth.link.ready": "Ready to sign in?",
   "Auth.link.signin": "Sign in",
diff --git a/node_modules/@strapi/admin/index.html b/node_modules/@strapi/admin/index.html
index a00a161..17ad53b 100644
--- a/node_modules/@strapi/admin/index.html
+++ b/node_modules/@strapi/admin/index.html
@@ -6,7 +6,7 @@
     <!-- Make the page mobile compatible -->
     <meta name="viewport" content="width=device-width, initial-scale=1" />
     <meta name="mobile-web-app-capable" content="yes" />
-    <title>Strapi Admin</title>
+    <title>Trackflix Admin</title>
   </head>
   <body>
     <!-- The app hooks into this div -->
